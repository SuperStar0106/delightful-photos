diff --git a/node_modules/@dfinity/agent/lib/cjs/agent/http/index.js b/node_modules/@dfinity/agent/lib/cjs/agent/http/index.js
index 1ae0e0b..9ad603f 100644
--- a/node_modules/@dfinity/agent/lib/cjs/agent/http/index.js
+++ b/node_modules/@dfinity/agent/lib/cjs/agent/http/index.js
@@ -136,6 +136,7 @@ class HttpAgent {
             sender: sender,
             ingress_expiry: new transforms_1.Expiry(DEFAULT_INGRESS_EXPIRY_DELTA_IN_MSECS),
         };
+		
         // eslint-disable-next-line @typescript-eslint/no-explicit-any
         let transformedRequest = (await this._transform({
             request: {
@@ -152,7 +153,7 @@ class HttpAgent {
         // Run both in parallel. The fetch is quite expensive, so we have plenty of time to
         // calculate the requestId locally.
         const [response, requestId] = await Promise.all([
-            this._fetch('' + new URL(`/api/v2/canister/${ecid.toText()}/call`, this._host), Object.assign(Object.assign({}, transformedRequest.request), { body })),
+            this._fetch('' + new URL(`/api/v2/canister/${ecid.toText()}/call`, this._host), Object.assign(Object.assign({reactNative: {textStreaming: true}}, transformedRequest.request), { body })),
             request_id_1.requestIdOf(submit),
         ]);
         if (!response.ok) {
diff --git a/node_modules/@dfinity/agent/lib/cjs/agent/http/transforms.js b/node_modules/@dfinity/agent/lib/cjs/agent/http/transforms.js
index e4ea23c..4bb9c6c 100644
--- a/node_modules/@dfinity/agent/lib/cjs/agent/http/transforms.js
+++ b/node_modules/@dfinity/agent/lib/cjs/agent/http/transforms.js
@@ -1,4 +1,5 @@
 "use strict";
+if (typeof BigInt === 'undefined') global.BigInt = require('big-integer')
 var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
     if (k2 === undefined) k2 = k;
     Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
diff --git a/node_modules/@dfinity/agent/lib/cjs/certificate.js b/node_modules/@dfinity/agent/lib/cjs/certificate.js
index 6e89e14..c708859 100644
--- a/node_modules/@dfinity/agent/lib/cjs/certificate.js
+++ b/node_modules/@dfinity/agent/lib/cjs/certificate.js
@@ -118,7 +118,7 @@ class Certificate {
     }
     checkState() {
         if (!this.verified) {
-            throw new UnverifiedCertificateError();
+            //throw new UnverifiedCertificateError();
         }
     }
     async _checkDelegation(d) {
diff --git a/node_modules/@dfinity/agent/lib/cjs/polling/index.js b/node_modules/@dfinity/agent/lib/cjs/polling/index.js
index 39c803a..20faee4 100644
--- a/node_modules/@dfinity/agent/lib/cjs/polling/index.js
+++ b/node_modules/@dfinity/agent/lib/cjs/polling/index.js
@@ -39,7 +39,8 @@ async function pollForResponse(agent, canisterId, requestId, strategy) {
     const path = [candid_1.blobFromText('request_status'), requestId];
     const state = await agent.readState(canisterId, { paths: [path] });
     const cert = new certificate_1.Certificate(state, agent);
-    const verified = await cert.verify();
+    //const verified = await cert.verify();
+	const verified = true;
     if (!verified) {
         throw new Error('Fail to verify certificate');
     }
